# Техническое задание: Разработка React-прототипа глобального меню

## 1. Общее описание

Требуется разработать прототип интерфейса с глобальным меню для медицинской информационной системы, включающий следующие основные элементы:
- Боковое (левое) основное меню
- Модальное мега-меню, вызываемое по клику
- Система поиска по пунктам меню с фильтрацией
- Возможность закрепления/откреплении элементов в основном меню

## 2. Компоненты системы

### 2.1. Боковое основное меню
- Расположено слева от основного контента
- Содержит иконки для быстрого доступа к основным разделам системы
- Отображает закрепленные (pin) элементы из мега-меню
- Элементы, отмеченные красными иконками в мега-меню, автоматически отображаются в боковом меню
- Пользователь может открепить (unpin) элементы, чтобы удалить их из бокового меню
- Всегда отображает иконки для открытия мега-меню, доступа к ресурсам, консолям и вкладкам

### 2.2. Модальное мега-меню
- Открывается поверх основного контента при клике на соответствующую иконку в боковом меню
- Содержит строку поиска в верхней части
- Структурированное отображение всех доступных разделов системы
- Разделено на основные категории:
  * Resources (Ресурсы)
  * Notebooks (Записные книжки)
  * API
  * Database (База данных)
  * IAM (Управление доступом)
  * FAR (Функциональные возможности и права)
  * Plugins & Modules (Плагины и модули)
- Элементы с красными иконками указывают на то, что они закреплены (pin) в боковом меню

### 2.3. Система поиска и фильтрации
- Поисковая строка в верхней части мега-меню
- Фильтрация элементов меню в реальном времени при вводе
- Группировка результатов поиска по категориям (Resource Browser, Database, Compartment API)
- Отображение счетчика найденных элементов для каждой категории
- Категории над результатами поиска являются интерактивными фильтрами
- Пользователь может выбрать одну или несколько категорий для уточнения результатов поиска
- При выборе категории результаты фильтруются, отображая только элементы выбранной категории

### 2.4. Система закрепления элементов
- Элементы из мега-меню могут быть закреплены в боковом меню для быстрого доступа
- Закрепленные элементы отображаются красными иконками в мега-меню
- Пользователь может закрепить (pin) или открепить (unpin) элемент, нажав на соответствующую иконку рядом с элементом
- Закрепленные элементы сохраняются между сессиями
- Максимальное количество закрепленных элементов может быть ограничено (необходимо определить лимит)

## 3. Состояния интерфейса

### 3.1. Initial State (Исходное состояние)
- Боковое меню отображает только основные иконки и закрепленные пользователем элементы
- Основное содержимое представлено в виде таблицы с ресурсами, показывающей категории, типы ресурсов, количество экземпляров, размер и т.д.

### 3.2. Mega Menu Initial State (Исходное состояние мега-меню)
- При открытии мега-меню отображаются все доступные категории и их элементы
- Категории организованы в виде секций с заголовками
- Элементы представлены иконками и текстовыми названиями
- Элементы, закрепленные в боковом меню, отмечены красными иконками
- Остальные элементы имеют серые иконки

### 3.3. Mega Menu Search State (Состояние поиска в мега-меню)
- При вводе текста в поисковую строку результаты фильтруются в реальном времени
- Результаты группируются по категориям
- Для каждой категории отображается счетчик найденных элементов
- Категории с результатами (All, Resource Browser, Database, Compartment API и др.) представлены как интерактивные фильтры
- Пользователь может выбрать категорию для фильтрации результатов
- Выбранный фильтр визуально выделяется
- Отображаются только элементы, соответствующие поисковому запросу и выбранным фильтрам

## 4. Технические требования

### 4.1. Используемые технологии
- React.js для разработки компонентов
- React Hooks для управления состоянием
- CSS/SCSS или styled-components для стилизации
- React-модальные окна для мега-меню
- Локальное хранилище (localStorage) для сохранения закрепленных элементов

### 4.2. Структура данных

#### 4.2.1. Структура элемента меню
```javascript
{
  id: 'uniqueId', // Уникальный идентификатор элемента
  name: 'Element Name', // Отображаемое название
  icon: 'iconName', // Название иконки
  category: 'categoryId', // Идентификатор категории
  isPinned: false, // Флаг закрепления в боковом меню
  important: false // Флаг важности элемента (для начальной настройки закрепленных элементов)
}
```

#### 4.2.2. Структура категории
```javascript
{
  id: 'categoryId', // Уникальный идентификатор категории
  name: 'Category Name', // Отображаемое название
  icon: 'iconName', // Название иконки
  order: 1 // Порядок отображения категории
}
```

#### 4.2.3. Структура состояния фильтров
```javascript
{
  searchQuery: '', // Текущий поисковый запрос
  activeFilters: ['all'], // Активные фильтры категорий
  results: { // Количество результатов по категориям
    all: 3,
    resourceBrowser: 1,
    database: 1,
    compartmentApi: 1
  }
}
```

### 4.3. Основные функциональные возможности

#### 4.3.1. Поисковая функциональность
- Поиск по названиям элементов во всех категориях
- Подсчет количества найденных элементов в каждой категории
- Фильтрация по категориям с обновлением результатов в реальном времени
- Выделение активного фильтра
- Очистка поиска и сброс фильтров

#### 4.3.2. Функциональность закрепления
- Закрепление элемента в боковом меню
- Открепление элемента из бокового меню
- Обновление визуального отображения закрепленных элементов в мега-меню (красные иконки)
- Сохранение состояния закрепленных элементов между сессиями

#### 4.3.3. Навигационная функциональность
- Открытие/закрытие мега-меню
- Навигация между разделами системы по клику на элементы как в боковом, так и в мега-меню
- Сохранение истории последних посещенных элементов (показано в секции "RECENT")

## 5. Пользовательский интерфейс

### 5.1. Боковое меню
- Вертикальная панель с иконками слева
- Ширина: 60-70px
- Иконки размером 24x24px
- Эффекты наведения для улучшения юзабилити
- Визуальное выделение активного элемента

### 5.2. Мега-меню
- Модальное окно с полупрозрачным затемненным фоном
- Поисковая строка в верхней части
- Фильтры категорий под поисковой строкой
- Контент организован в колонки по категориям
- Размер: примерно 80% ширины и 70% высоты экрана
- Закрывается по клику вне области меню или на иконку закрытия

### 5.3. Элементы пользовательского взаимодействия
- Кнопки закрепления/откреплении элементов
- Интерактивные фильтры категорий
- Поисковая строка с возможностью очистки
- Прокрутка для длинных списков элементов в категориях

## 6. Требования к тестированию

### 6.1. Проверка функциональности
- Работоспособность поиска и фильтрации
- Корректность закрепления/откреплении элементов
- Сохранение состояния между сессиями
- Адаптивность интерфейса на различных устройствах

### 6.2. Тестирование на пользователях
- Оценка удобства использования интерфейса
- Сбор обратной связи о расположении элементов
- Анализ частоты использования различных элементов меню
- Исследование эффективности поиска и фильтрации

## 7. Критерии приемки прототипа

### 7.1. Функциональные критерии
- Полностью функционирующее боковое меню с закрепленными элементами
- Работающее мега-меню с категориями и элементами
- Работающий поиск с фильтрацией по категориям
- Возможность закрепления и откреплении элементов в меню
- Сохранение состояния закрепленных элементов между сессиями

### 7.2. Нефункциональные критерии
- Отзывчивый интерфейс с оптимальной производительностью
- Интуитивно понятное взаимодействие без необходимости дополнительных инструкций
- Визуальное соответствие предоставленным скриншотам
- Адаптивность для различных размеров экрана